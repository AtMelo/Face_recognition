import os
import shutil
from torchvision import transforms
import torch
import time
from PIL import Image
import random
import matplotlib.pyplot as plt


class DataLoader():
    def __init__(self, dir_path, transform):
        self.images_dict = {}
        self.id2image = {}
        self.labels = None
        self.dir_path = dir_path
        self.transform = transform
        self.load_images()

    def load_images(self):
        # returns labels/names list
        self.labels = os.listdir(self.dir_path)
        for label in self.labels:
            path = os.path.join(self.dir_path, label)
            images = os.listdir(path)
            self.images_dict[label] = images
            for image_id in images:
                img_path = os.path.join(path, image_id)
                self.id2image[image_id] = self.transform(Image.open(img_path))

    def gen_data(self):
        labels = []
        image_ids = []
        for label, images in self.images_dict.items():
            num_images = len(images)
            labels.extend([label] * num_images)
            image_ids.extend(images)
        return image_ids, labels

    def gen_for_triplet(self, anchor_label):
        anchor =  self.images_dict[anchor_label][0]
        positive = self.images_dict[anchor_label][1]
        labels_copy = self.labels[:]
        labels_copy.remove(anchor_label)
        negative = self.images_dict[random.choice(labels_copy)][0]
        return anchor, positive,negative

    def get_image(self, image_id):
        return self.id2image[image_id]

path = r'C:\Users\Dataset\data'
os.chdir(path)
copy_path = r'C:\Users\Dataset\copy_files3'

# for cur_dir, dirs, files in os.walk(path):
#     if dirs == [] and len(files)>1:
#         # shutil.copytree(cur_dir,copy_path+'\\'+str(os.path.basename(cur_dir)))
#         path1 = os.path.join(cur_dir, os.path.basename(cur_dir))
#         print(path1)

transform = transforms.Compose([transforms.Resize((224, 224)),
									transforms.ToTensor(),
									transforms.Normalize((0.5, 0.5, 0.5),
														(0.5, 0.5, 0.5))])

im_loader = DataLoader(r'C:\Users\Dataset\copy_files3', transform)
im_data = im_loader.gen_data()

print(im_data)
print(im_loader.gen_for_triplet('Abdullah_al-Attiyah'))
